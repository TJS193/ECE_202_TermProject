	AREA    segment_display, CODE, READONLY
	EXPORT	__segment_display				; make __main visible to linker
	;ENTRY			
	
__segment_display PROC 

;--------------------------------------------------------
segDisplay	PROC
	


		CMP r2, #1
		BEQ sA
		CMP r2, #2
		BEQ sB
		CMP r2, #3
		BEQ sC
		B els

sA    	MOV r10, #0x010000
		B disp
sB    	MOV r10, #0x020000
		B disp
sC    	MOV r10, #0x030000
		B disp
els   	MOV r10, #0x000000

    
disp	
		LDR r4, =GPIOB_BASE        ; Load GPIOD base address
		LDR r9, [r4, #GPIO_ODR]
		BIC r9, #0xFF0000
		MOV r9, r10
		STR r9, [r4, #GPIO_ODR]    ; Write result to GPIO output register
		

	;;put delay back in

		BX LR
		ENDP
;--------------------------------------------------------------


		ENDP

////////////////////////////////////////////////////////////////////////////////////////////////

;-------------------------GPIO B CONFIGS 7SEG--------------------------------------------
;Set PB.8,9,10,and 11 mode to output
	LDR r0, =GPIOB_BASE	;select base reg as GPIO B
	LDR r1, [r0, #GPIO_MODER]	;load contents of moder reg to r1
	BIC r1, r1, #0xF00000		;clear bits 8,9,10,111
	BIC r1, r1, #0x0F0000
	ORR r1, r1, #0x500000
	ORR r1, r1, #0x050000
	STR r1, [r0, #GPIO_MODER]	;store back into memory 
	
	;select push-pull output for PB.8,9,10,11
	LDR r0, =GPIOB_BASE
	LDR r1, [r0, #GPIO_OTYPER]
	BIC r1, r1, #0xF00000
	BIC r1, r1, #0x0F0000
	STR r1, [r0, #GPIO_OTYPER]

;----------------------------END GPIO B CONFIGS-------------------------------------
